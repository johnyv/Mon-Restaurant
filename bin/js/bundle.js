var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var SceneSprite_1 = require("./game/SceneSprite");
var InstallationInfo_1 = require("./game/views/menu/InstallationInfo");
var MainView_1 = require("./game/views/MainView");
var MenuView_1 = require("./game/views/menu/MenuView");
var InstallationListItem_1 = require("./game/views/menu/InstallationListItem");
var InstallationItem_1 = require("./game/views/menu/InstallationItem");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("game/SceneSprite.ts", SceneSprite_1.default);
        reg("game/views/menu/InstallationInfo.ts", InstallationInfo_1.default);
        reg("game/views/MainView.ts", MainView_1.default);
        reg("game/views/menu/MenuView.ts", MenuView_1.default);
        reg("game/views/menu/InstallationListItem.ts", InstallationListItem_1.default);
        reg("game/views/menu/InstallationItem.ts", InstallationItem_1.default);
    };
    GameConfig.width = 960;
    GameConfig.height = 1280;
    GameConfig.scaleMode = "showall";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "views/MainUI.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./game/SceneSprite":8,"./game/views/MainView":36,"./game/views/menu/InstallationInfo":37,"./game/views/menu/InstallationItem":38,"./game/views/menu/InstallationListItem":39,"./game/views/menu/MenuView":40}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var CommandChannel_1 = require("./game/controller/CommandChannel");
var Comp_scene_layer_1 = require("./component/Comp_scene_layer");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        Laya.stage.bgColor = "0x44444";
        Laya.stage.alignH = "center"; //设置水平居中对齐
        //设置垂直居中对齐，Stage.ALIGN_MIDDLE 常量等价于 middle 字符串
        Laya.stage.alignV = Laya.Stage.ALIGN_MIDDLE;
        if (Laya.Browser.onPC)
            Laya.stage.screenMode = Laya.Stage.SCREEN_HORIZONTAL;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        Laya.ClassUtils.regClass("component.Comp_scene_layer", Comp_scene_layer_1.default);
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
        CommandChannel_1.default.instance.init();
    } /*  */
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        // GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);
        // CommandChannel.instance.init();
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./component/Comp_scene_layer":3,"./game/controller/CommandChannel":10}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**场景分层组件，主要用于设置
 * 场景每个层级的以下属性
 * 1.速度
 */
var Comp_scene_layer = /** @class */ (function (_super) {
    __extends(Comp_scene_layer, _super);
    function Comp_scene_layer() {
        var _this = _super.call(this) || this;
        //缩放时间100毫秒
        _this.speed = 0;
        return _this;
    }
    return Comp_scene_layer;
}(Laya.Box));
exports.default = Comp_scene_layer;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConstName = /** @class */ (function () {
    function ConstName() {
    }
    /**全局信息中心 */
    ConstName.GAME_CONTROLLER = 1001;
    /**创建角色 */
    ConstName.GAME_CREATE_HERO = 1002;
    ConstName.GAME_TEST_COMMANDCHANNEL = 1003;
    /**添加设施到场景 */
    ConstName.GAME_ADD_INSTALLATION = 1004;
    /**加载控制中心*/
    ConstName.LOAD_CONTROLLER = 2001;
    ConstName.LOAD_ADD_TO_LOAD_LIST = 2002;
    ConstName.LOAD_START_LOAD = 2003;
    /**人物相关控制中心 */
    ConstName.ROLE_CONTROLLER = 3001;
    /**根据角色id获取角色 */
    ConstName.ROLE_GET_ROLE_BY_ID = 3002;
    /**创建角色到舞台上 */
    ConstName.ROLE_ADD_HERO = 3003;
    /**设置角色的场景移动速度 */
    ConstName.ROLE_SCENE_SPEED = 3004;
    /**获取角色列表 */
    ConstName.ROLE_GET_HERO_LIST = 3005;
    /**获取敌人列表 */
    ConstName.ROLE_GET_ENEMY_LIST = 3006;
    /**创建敌人到舞台上
     * params:Array= [roleName:string,roleId:number,pos:Ponumber]
     */
    ConstName.ROLE_ADD_ENEMY = 3007;
    /**ui界面控制中心 */
    ConstName.UI_CONTROLLER = 4001;
    /**根据id显示界面 */
    ConstName.UI_SHOW_VIEW_BY_NAME = 4002;
    /**根据id移除界面 */
    ConstName.UI_REMOVE_VIEW_BY_NAME = 4003;
    /**根据id销毁界面 */
    ConstName.UI_DESTROY_VIEW_BY_NAME = 4004;
    /**UI界面枚举*/
    ConstName.MAIN_VIEW = "MAIN_VIEW"; //主界面
    ConstName.MENU_VIEW = "MENU_VIEW"; //菜单界面
    ConstName.INSTALLATION_INFO = "INSTALLATION_INFO"; //设施信息界面
    /**游戏层级控制中心*/
    ConstName.LAYER_CONTROLLER = 6001;
    /**创建场景*/
    ConstName.LAYER_CREATE_SCENE = 6002;
    /**获取场景层 */
    ConstName.LAYER_GET_SCENE_LAYER = 6003;
    /**获取ui层 */
    ConstName.LAYER_GET_UI_LAYER = 6004;
    /**根据名字获取ui层子层级 */
    ConstName.LAYER_GET_UI_LAYER_BY_NAME = 6005;
    /**根据名字获取场景层子层级 */
    ConstName.LAYER_GET_SCENE_LAYER_BY_NAME = 6006;
    /**战斗控制中心 */
    ConstName.BATTLE_CONTROLLER = 7001;
    /**创建子弹组 */
    ConstName.BATTLE_CREATE_BULLET_GROUP = 7002;
    /**角色动作名称 */
    ConstName.ATTACK = "attack";
    ConstName.MOVE = "move";
    /**游戏层级名称，用来获取对应层级时的id */
    ConstName.WORLD_LAYER = "WORLD_LAYER"; //世界总容器，除ui层
    ConstName.UI_LAYER = "UI_LAYER"; //ui总容器
    /**UI层级索引 */
    ConstName.MAIN_UI_LAYER = "MAIN_UI_LAYER";
    ConstName.ALERT_UI_LAYER = "ALERT_UI_LAYER";
    ConstName.TIP_UI_LAYER = "TIP_UI_LAYER";
    /**角色层级索引 */
    ConstName.ROLE_LAYER = "ROLE_LAYER";
    ConstName.BULLET_LAYER = "BULLET_LAYER";
    ConstName.EFFECT_LAYER = "EFFECT_LAYER";
    /**事件名称 */
    ConstName.FIRST_LOAD_COMPLETE = "first_load_complete";
    ConstName.KEY_DOWN = "key_down";
    ConstName.KEY_UP = "key_up";
    ConstName.SHOW_VIEW = "OPEN_VIEW";
    ConstName.CLOSE_VIEW = "CLOSE_VIEW";
    return ConstName;
}());
exports.default = ConstName;
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameEvent = /** @class */ (function (_super) {
    __extends(GameEvent, _super);
    function GameEvent() {
        return _super.call(this) || this;
    }
    Object.defineProperty(GameEvent, "ins", {
        get: function () {
            !GameEvent._ins && (GameEvent._ins = new GameEvent());
            return GameEvent._ins;
        },
        enumerable: true,
        configurable: true
    });
    return GameEvent;
}(Laya.EventDispatcher));
exports.default = GameEvent;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameGlobal = /** @class */ (function () {
    function GameGlobal() {
    }
    /* 帧率 */
    GameGlobal.GAME_FRATE = 30;
    /**角色类文件 */
    GameGlobal.ROLE = 0;
    /**背景音乐类文件 */
    GameGlobal.MUSIC = 1;
    /**音效类文件 */
    GameGlobal.SOUND = 2;
    /**子弹类文件 */
    GameGlobal.BULLET = 3;
    /**ui类文件 */
    GameGlobal.UI = 4;
    /**scene类文件 */
    GameGlobal.SCENE = 5;
    /**法宝类文件 */
    GameGlobal.FABAO = 6;
    /**json类文件 */
    GameGlobal.JSON = 7;
    /*统一资源根路径 */
    GameGlobal.RESOURCE_BASE_PATH = "./resource/";
    /**角色文件根路径 */
    GameGlobal.RESOURCE_ROLE_PATH = "./resource/role/";
    /**音效文件根路径 */
    GameGlobal.RESOURCE_SOUND_PATH = "./resource/sound/";
    /**UI文件根路径 */
    GameGlobal.RESOURCE_UI_PATH = "./resource/ui/";
    /**scene文件根路径 */
    GameGlobal.RESOURCE_SCENE_PATH = "./resource/scene/";
    /**json配置文件根路径 */
    GameGlobal.RESOURCE_JSON_PATH = "./resource/json/";
    return GameGlobal;
}());
exports.default = GameGlobal;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameEvent_1 = require("./GameEvent");
var ConstName_1 = require("./ConstName");
var ViewConfigVo_1 = require("./vo/ViewConfigVo");
var MenuVo_1 = require("./vo/MenuVo");
var JsonConfig = /** @class */ (function () {
    function JsonConfig() {
        this.jsonToVoHash = {};
        this.uiVoHash = {};
        this.regJsonToVo();
    }
    Object.defineProperty(JsonConfig, "ins", {
        get: function () {
            !JsonConfig._ins && (JsonConfig._ins = new JsonConfig());
            return JsonConfig._ins;
        },
        enumerable: true,
        configurable: true
    });
    JsonConfig.prototype.regJsonToVo = function () {
        this.jsonToVoHash[ConstName_1.default.MENU_VIEW] = MenuVo_1.default;
    };
    JsonConfig.prototype.initJson = function () {
        // GameEvent.ins.event(ConstName.FIRST_LOAD_COMPLETE);
        var configJson = window["configJson"];
        // JsonConfig.bulletPosJson = this.createJsonById(configJson["bulletPos"],BulletPosVo);
        // JsonConfig.roleSettingJson = this.createJsonById(configJson["roleSetting"],RoleSettingVo);
        // JsonConfig.bulletConfigJson = this.createJsonById(configJson["bulletConfig"],BulletConfigVo);
        // JsonConfig.fbConfigVoJson = this.createJsonById(configJson["fbConfig"],FbConfigVo);
        JsonConfig.viewConfigVoJson = this.createJsonById(configJson["viewConfig"], ViewConfigVo_1.default);
        GameEvent_1.default.ins.event(ConstName_1.default.FIRST_LOAD_COMPLETE);
    };
    JsonConfig.prototype.setVo = function (viewName, jsonObj) {
        var viewVo = new this.jsonToVoHash[viewName]();
        viewVo.init(jsonObj);
        this.uiVoHash[viewName] = viewVo;
    };
    JsonConfig.prototype.getVo = function (viewName) {
        return this.uiVoHash[viewName];
    };
    JsonConfig.prototype.createJsonById = function (jsonObjArray, clzVo) {
        var obj = new Object();
        for (var jsonObjStr in jsonObjArray) {
            (new clzVo()).init(jsonObjArray[jsonObjStr], obj);
        }
        return obj;
    };
    return JsonConfig;
}());
exports.default = JsonConfig;
},{"./ConstName":4,"./GameEvent":5,"./vo/MenuVo":44,"./vo/ViewConfigVo":45}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*anyany
 any ...
 any @author jwd
 any*/
var SceneSprite = /** @class */ (function (_super) {
    __extends(SceneSprite, _super);
    function SceneSprite() {
        var _this = _super.call(this) || this;
        _this.mouseEnabled = true;
        //默认关闭时候全部销毁
        _this.autoDestroyAtClosed = true;
        _this.frontList = [];
        _this.middleList = [];
        _this.rearList = [];
        return _this;
    }
    SceneSprite.prototype.createView = function (view) {
        _super.prototype.createView.call(this, view);
        // Laya.stage.on(Laya.Event.CLICK,this,this.transformScene,[1,0]);
        // var i:number = 0;
        // while(this["front_"+i]) {
        // 	this.frontList.push(this["front_"+i]);
        // 	this.frontEnd = this["front_"+i];
        // 	i++;
        // }
        // i = 0;
        // while(this["middle_"+i]) {
        // 	this.middleList.push(this["middle_"+i]);
        // 	this.middleEnd = this["middle_"+i];
        // 	i++;
        // }
        // i = 0;
        // while(this["rear_"+i]) {
        // 	this.rearList.push(this["rear_"+i]);
        // 	this.rearEnd = this["rear_"+i];
        // 	i++;
        // }
    };
    SceneSprite.prototype.destroy = function (destroyChild) {
        _super.prototype.destroy.call(this, destroyChild);
    };
    return SceneSprite;
}(Laya.Scene));
exports.default = SceneSprite;
},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Controller_1 = require("./Controller");
var BattleController = /** @class */ (function (_super) {
    __extends(BattleController, _super);
    // private  _bulletManager:BulletManager;
    function BattleController(channel) {
        return _super.call(this, channel) || this;
        // _bulletManager = new BulletManager(channel);
        // this.managerList.push(_bulletManager);
        // this.addCommand(ConstName.BATTLE_CREATE_BULLET_GROUP,_bulletManager,_bulletManager.createBulletGroup);
    }
    return BattleController;
}(Controller_1.default));
exports.default = BattleController;
},{"./Controller":11}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConstName_1 = require("../ConstName");
var GameController_1 = require("./GameController");
var UIController_1 = require("./UIController");
var LoadController_1 = require("./LoadController");
var LayerController_1 = require("./LayerController");
var RoleController_1 = require("./RoleController");
var BattleController_1 = require("./BattleController");
var InstallationProxy_1 = require("../proxy/InstallationProxy");
var CommandChannel = /** @class */ (function () {
    function CommandChannel() {
        this._controllerList = new Object();
        this._dataProxyList = new Object();
        this.registerController(ConstName_1.default.GAME_CONTROLLER, new GameController_1.default(this));
        this.registerController(ConstName_1.default.UI_CONTROLLER, new UIController_1.default(this));
        this.registerController(ConstName_1.default.LOAD_CONTROLLER, new LoadController_1.default(this));
        this.registerController(ConstName_1.default.LAYER_CONTROLLER, new LayerController_1.default(this));
        this.registerController(ConstName_1.default.ROLE_CONTROLLER, new RoleController_1.default(this));
        this.registerController(ConstName_1.default.BATTLE_CONTROLLER, new BattleController_1.default(this));
        // this.registerController(ConstData.SOUND_CONTROLLER,new SoundController(this));
        // this.registerController(ConstData.APP_CONTROLLER,new AppController(this));
        this.registerDataProxy(ConstName_1.default.PROXY_INSTALLATION, new InstallationProxy_1.default(this));
        this.init();
    }
    CommandChannel.prototype.init = function () {
        for (var controllerName in this._controllerList) {
            this._controllerList[controllerName].init();
        }
        for (var dataProxyName in this._dataProxyList) {
            this._dataProxyList[dataProxyName].init();
        }
    };
    Object.defineProperty(CommandChannel, "instance", {
        //单例模式获取命令管线，全局唯一
        get: function () {
            !CommandChannel._instance && (CommandChannel._instance = new CommandChannel());
            return CommandChannel._instance;
            //return CommandChannel._instance!=null?CommandChannel._instance:(CommandChannel._instance=new CommandChannel(),CommandChannel._instance);
        },
        enumerable: true,
        configurable: true
    });
    //注册控制器，通过commmandName和具体的控制器关联
    CommandChannel.prototype.registerController = function (controllerName, controller) {
        if (!this._controllerList.hasOwnProperty(controllerName)) {
            this._controllerList[controllerName] = controller;
        }
    };
    //根据commandName获取控制器
    CommandChannel.prototype.getController = function (controllerName) {
        if (this._controllerList[controllerName]) {
            return this._controllerList[controllerName];
        }
        return null;
    };
    //执行命令
    CommandChannel.prototype.postCommand = function (controllerName, commandName, params) {
        if (params === void 0) { params = null; }
        var getController = this.getController(controllerName);
        return getController != null ? getController.executeCommand(commandName, params) : null;
    };
    /**
     * 注册数据处理中心
    */
    CommandChannel.prototype.registerDataProxy = function (dataProxyName, dataProxy) {
        if (!this._dataProxyList.hasOwnProperty(dataProxyName)) {
            this._dataProxyList[dataProxyName] = dataProxy;
        }
    };
    /**
     * 注册具体数据到数据中心
    */
    CommandChannel.prototype.addFuncToDataProxy = function (dataProxyName, dataName, func, thisObj) {
        var dataProxy = this.getDataProxy(dataProxyName);
        dataProxy && dataProxy.addDataFunc(dataName, func, thisObj);
    };
    //根据dataProxyName获取控制器
    CommandChannel.prototype.getDataProxy = function (dataProxyName) {
        if (this._dataProxyList[dataProxyName]) {
            return this._dataProxyList[dataProxyName];
        }
        return null;
    };
    /**
     * 数据改变，广播消息
    */
    CommandChannel.prototype.broadCastData = function (dataProxyName, dataName, params) {
        if (params === void 0) { params = null; }
        var dataProxy = this.getDataProxy(dataProxyName);
        return dataProxy != null ? dataProxy.executeCommand(dataName, params) : null;
    };
    return CommandChannel;
}());
exports.default = CommandChannel;
},{"../ConstName":4,"../proxy/InstallationProxy":28,"./BattleController":9,"./GameController":12,"./LayerController":13,"./LoadController":14,"./RoleController":15,"./UIController":16}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Controller = /** @class */ (function () {
    function Controller(channel) {
        this.commandList = new Object();
        this.managerList = [];
        this.channel = channel;
    }
    Controller.prototype.init = function () {
        for (var baseManagerName in this.managerList) {
            this.managerList[baseManagerName].init();
        }
    };
    //添加命令
    Controller.prototype.addCommand = function (commandName, caller, func) {
        if (!this.commandList.hasOwnProperty(commandName)) {
            this.commandList[commandName] = [caller, func];
        }
    };
    //执行命令
    Controller.prototype.executeCommand = function (commandName, params) {
        return this.commandList[commandName] != null ? this.commandList[commandName][1].call(this.commandList[commandName][0], params) : null;
    };
    return Controller;
}());
exports.default = Controller;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Controller_1 = require("./Controller");
var GameManager_1 = require("../manager/GameManager");
var ConstName_1 = require("../ConstName");
var GameController = /** @class */ (function (_super) {
    __extends(GameController, _super);
    function GameController(channel) {
        var _this = _super.call(this, channel) || this;
        _this._gameManager = new GameManager_1.default(_this.channel);
        _this.managerList.push(_this._gameManager);
        _this.addCommand(ConstName_1.default.GAME_TEST_COMMANDCHANNEL, _this._gameManager, _this._gameManager.testCommandChannel);
        _this.addCommand(ConstName_1.default.GAME_ADD_INSTALLATION, _this._gameManager, _this._gameManager.addInstallation);
        return _this;
    }
    return GameController;
}(Controller_1.default));
exports.default = GameController;
},{"../ConstName":4,"../manager/GameManager":18,"./Controller":11}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Controller_1 = require("./Controller");
var ConstName_1 = require("../ConstName");
var LayerManager_1 = require("../manager/LayerManager");
/**
 * ...
 * @author ...
 */
var LayerController = /** @class */ (function (_super) {
    __extends(LayerController, _super);
    function LayerController(channel) {
        var _this = _super.call(this, channel) || this;
        _this._layerManager = new LayerManager_1.default(channel);
        _this.managerList.push(_this._layerManager);
        _this.addCommand(ConstName_1.default.LAYER_CREATE_SCENE, _this._layerManager, _this._layerManager.createScene);
        _this.addCommand(ConstName_1.default.LAYER_GET_SCENE_LAYER, _this._layerManager, _this._layerManager.getSceneLayer);
        _this.addCommand(ConstName_1.default.LAYER_GET_SCENE_LAYER_BY_NAME, _this._layerManager, _this._layerManager.getSceneLayerByName);
        _this.addCommand(ConstName_1.default.LAYER_GET_UI_LAYER, _this._layerManager, _this._layerManager.getUILayer);
        _this.addCommand(ConstName_1.default.LAYER_GET_UI_LAYER_BY_NAME, _this._layerManager, _this._layerManager.getUILayerByName);
        return _this;
    }
    return LayerController;
}(Controller_1.default));
exports.default = LayerController;
},{"../ConstName":4,"../manager/LayerManager":21,"./Controller":11}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Controller_1 = require("./Controller");
var ConstName_1 = require("../ConstName");
var LoadManager_1 = require("../manager/LoadManager");
var JsonConfig_1 = require("../JsonConfig");
var GameGlobal_1 = require("../GameGlobal");
var LoadController = /** @class */ (function (_super) {
    __extends(LoadController, _super);
    function LoadController(channel) {
        var _this = _super.call(this, channel) || this;
        _this._firstLoadList = [];
        _this.addCommand(ConstName_1.default.LOAD_ADD_TO_LOAD_LIST, _this, _this.addToLoadList);
        _this.addCommand(ConstName_1.default.LOAD_START_LOAD, _this, _this.startLoad);
        _this.startLoad();
        return _this;
    }
    /**初始加载的资源都放在这里 */
    LoadController.prototype.startLoad = function () {
        this._firstLoadList.push({ url: LoadManager_1.default.getUrl("configJson.json", GameGlobal_1.default.JSON), type: Laya.Loader.JSON });
        Laya.loader.load(this._firstLoadList, new Laya.Handler(this, this.loadComplete));
        // if(Laya.Browser.onWeiXin) {
        //     this._firstLoadList.push({ url: LoadManager.getUrl("./configJson.json"), type: Laya.Loader.JSON });
        //     Laya.loader.load(this._firstLoadList,new Laya.Handler(this,this.loadComplete));   
        // } else {
        //     var script:any = Laya.Browser.document.createElement("script");
        //     script.src = LoadManager.getUrl("./newFightJson.js");
        //     script.onload = function():void {
        //         JsonConfig.ins.initJson();
        //     }
        //     script.onerror = function():void
        //     {
        //         alert("配置文件加载错误，请刷新重试");
        //     }
        //     Laya.Browser.document.body.appendChild(script);
        // }
    };
    /**加入资源到加载列表 */
    LoadController.prototype.addToLoadList = function (data) {
        if (data.length > 0) {
            for (var dataStr in data) {
                this._firstLoadList.push(data[dataStr]);
            }
        }
        else
            this._firstLoadList.push(data);
    };
    LoadController.prototype.loadComplete = function () {
        window["configJson"] = LoadManager_1.default.getRes("configJson.json", GameGlobal_1.default.JSON);
        JsonConfig_1.default.ins.initJson();
        // GameEvent.ins.event(ConstName.FIRST_LOAD_COMPLETE);
    };
    return LoadController;
}(Controller_1.default));
exports.default = LoadController;
},{"../ConstName":4,"../GameGlobal":6,"../JsonConfig":7,"../manager/LoadManager":22,"./Controller":11}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Controller_1 = require("./Controller");
var RoleManager_1 = require("../manager/RoleManager");
var ConstName_1 = require("../ConstName");
/**
 * ...
 * @author jwd
 */
var RoleController = /** @class */ (function (_super) {
    __extends(RoleController, _super);
    function RoleController(channel) {
        var _this = _super.call(this, channel) || this;
        _this._roleManager = new RoleManager_1.default(_this.channel);
        _this.managerList.push(_this._roleManager);
        _this.addCommand(ConstName_1.default.ROLE_GET_ROLE_BY_ID, _this._roleManager, _this._roleManager.getHero);
        _this.addCommand(ConstName_1.default.ROLE_ADD_HERO, _this._roleManager, _this._roleManager.addHero);
        _this.addCommand(ConstName_1.default.ROLE_ADD_ENEMY, _this._roleManager, _this._roleManager.addEnemy);
        _this.addCommand(ConstName_1.default.ROLE_SCENE_SPEED, _this._roleManager, _this._roleManager.setSceneSpeed);
        _this.addCommand(ConstName_1.default.ROLE_GET_HERO_LIST, _this._roleManager, _this._roleManager.getHeroList);
        _this.addCommand(ConstName_1.default.ROLE_GET_ENEMY_LIST, _this._roleManager, _this._roleManager.getEnemyList);
        return _this;
    }
    return RoleController;
}(Controller_1.default));
exports.default = RoleController;
},{"../ConstName":4,"../manager/RoleManager":23,"./Controller":11}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Controller_1 = require("./Controller");
var UIManager_1 = require("../manager/UIManager");
var ConstName_1 = require("../ConstName");
var UIController = /** @class */ (function (_super) {
    __extends(UIController, _super);
    function UIController(channel) {
        var _this = _super.call(this, channel) || this;
        _this._uiManager = new UIManager_1.default(channel);
        _this.managerList.push(_this._uiManager);
        _this.addCommand(ConstName_1.default.UI_SHOW_VIEW_BY_NAME, _this._uiManager, _this._uiManager.showView);
        _this.addCommand(ConstName_1.default.UI_REMOVE_VIEW_BY_NAME, _this._uiManager, _this._uiManager.removeViewByName);
        _this.addCommand(ConstName_1.default.UI_DESTROY_VIEW_BY_NAME, _this._uiManager, _this._uiManager.destroyViewByName);
        return _this;
    }
    return UIController;
}(Controller_1.default));
exports.default = UIController;
},{"../ConstName":4,"../manager/UIManager":26,"./Controller":11}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 管理器的基类，主要实现管理器的初始化，
 * 销毁等基本操作
 * @author jwd
 */
var BaseManager = /** @class */ (function () {
    function BaseManager(channel) {
        if (channel === void 0) { channel = null; }
        this.channel = channel;
    }
    BaseManager.prototype.init = function () {
    };
    BaseManager.prototype.destroy = function () {
    };
    return BaseManager;
}());
exports.default = BaseManager;
},{}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
var InputManager_1 = require("./InputManager");
var HitManager_1 = require("./HitManager");
var GameEvent_1 = require("../GameEvent");
var ConstName_1 = require("../ConstName");
var LoadManager_1 = require("./LoadManager");
/**
 * ...
 * @author jwd
 */
var GameManager = /** @class */ (function (_super) {
    __extends(GameManager, _super);
    function GameManager(channel) {
        var _this = _super.call(this, channel) || this;
        _this.roleId = 2;
        _this.enemyNameArr = ["m_1", "m_2", "m_3", "m_4"];
        _this._inputManager = new InputManager_1.default(channel);
        _this._hitManager = new HitManager_1.default(channel);
        return _this;
    }
    GameManager.prototype.init = function () {
        GameEvent_1.default.ins.on(ConstName_1.default.FIRST_LOAD_COMPLETE, this, this.initGame);
    };
    GameManager.prototype.initGame = function () {
        // this.channel.postCommand(ConstName.ROLE_CONTROLLER,ConstName.ROLE_ADD_HERO,["female",0,new Laya.Point(400,100)]);
        //临时写段生成enmey的逻辑，之后处理
        for (var i = 0; i < 10; i++) {
            this.createEnemy();
        }
        // Laya.timer.loop(600,this,this.createEnemy);
        this.channel.postCommand(ConstName_1.default.LAYER_CONTROLLER, ConstName_1.default.LAYER_CREATE_SCENE, ['s_1']);
        // this._inputManager.setInputStyle();
        this.channel.postCommand(ConstName_1.default.UI_CONTROLLER, ConstName_1.default.UI_SHOW_VIEW_BY_NAME, [ConstName_1.default.MAIN_VIEW]);
        // this._hitManager.init();
        // Laya.SoundManager.playMusic(LoadManager.getUrl("bgm.mp3",GameGlobal.MUSIC));
    };
    GameManager.prototype.createEnemy = function () {
        var random = Math.random() * 100;
        if (random > 20) {
            this.roleId++;
            var randomName = this.enemyNameArr[parseInt(Math.random() * this.enemyNameArr.length + "")];
            this.channel.postCommand(ConstName_1.default.ROLE_CONTROLLER, ConstName_1.default.ROLE_ADD_ENEMY, [randomName, this.roleId, new Laya.Point(-560 + Math.random() * 2240, Math.random() * (Laya.stage.height - 100))]);
        }
    };
    GameManager.prototype.testCommandChannel = function () {
        alert("命令管线调试成功，可以开工了");
    };
    GameManager.prototype.addInstallation = function (data) {
        var roleLayer = this.channel.postCommand(ConstName_1.default.LAYER_CONTROLLER, ConstName_1.default.LAYER_GET_SCENE_LAYER_BY_NAME, ConstName_1.default.ROLE_LAYER);
        var installationImage = new Laya.Image();
        installationImage.skin = LoadManager_1.default.getIconUrl(data.type, data.id);
        installationImage.pos(data.posArr[0], data.posArr[1]);
        installationImage.width = data.sizeArr[0];
        installationImage.height = data.sizeArr[1];
        roleLayer.addChild(installationImage);
        this.channel.postCommand(ConstName_1.default.UI_CONTROLLER, ConstName_1.default.UI_REMOVE_VIEW_BY_NAME, ConstName_1.default.INSTALLATION_INFO);
        this.channel.postCommand(ConstName_1.default.UI_CONTROLLER, ConstName_1.default.UI_REMOVE_VIEW_BY_NAME, ConstName_1.default.MENU_VIEW);
    };
    return GameManager;
}(BaseManager_1.default));
exports.default = GameManager;
},{"../ConstName":4,"../GameEvent":5,"./BaseManager":17,"./HitManager":19,"./InputManager":20,"./LoadManager":22}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
var HitManager = /** @class */ (function (_super) {
    __extends(HitManager, _super);
    // private  _heroList:Array<any>;
    // private  _bulletGroupList:Array.<BaseBulletGroup>;
    // private  _enemyList:Array.<Enemy>
    function HitManager(channel) {
        return _super.call(this, channel) || this;
        // _bulletGroupList = new Array.<BaseBulletGroup>;
    }
    HitManager.prototype.init = function () {
        // Laya.timer.loop(30,this,this.update);
        // _heroList = this.channel.postCommand(ConstName.ROLE_CONTROLLER,ConstName.ROLE_GET_HERO_LIST) as Array.<Hero>;
        // _enemyList = this.channel.postCommand(ConstName.ROLE_CONTROLLER,ConstName.ROLE_GET_ENEMY_LIST) as Array.<Enemy>;
        // for each(var hero:Role in _heroList) {
        //     _bulletGroupList.push(hero.bulletGroup);
        // }
    };
    /**
     *检测碰撞主循环
     *需要特别注意，性能
     *随时进行优化
     */
    HitManager.prototype.update = function () {
        // var attackRect:Rectangle;
        // var hitRect:Rectangle;
        // for each(var bulletGroup:BaseBulletGroup in _bulletGroupList) {
        //     var bulletList:Array.<BulletAnimation> = bulletGroup.bulletList;
        //     for each(var bullet:BulletAnimation in bulletList) {
        //         attackRect = bullet.getGraphicBounds(true);
        //         attackRect.x = bullet.x;
        //         attackRect.y = bullet.y;
        //         for each(var enemy:Enemy in _enemyList) {
        //             if(!enemy.isDie){
        //                 hitRect = enemy.gameAni.getGraphicBounds(true);
        //                 hitRect.x = enemy.gameAni.x;
        //                 hitRect.y = enemy.gameAni.y;
        //                 if(attackRect.intersection(hitRect)) {
        //                     enemy.beHurted();
        //                 }                        
        //             }
        //         }
        //     }
        // }
    };
    return HitManager;
}(BaseManager_1.default));
exports.default = HitManager;
},{"./BaseManager":17}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
/**
 * ...
 * @author jwd
 */
var InputManager = /** @class */ (function (_super) {
    __extends(InputManager, _super);
    function InputManager(channel) {
        return _super.call(this, channel) || this;
    }
    /**根据平台设置对应的控制方式,
     * pc按键控制，
     * 移动，虚拟按键
     */
    InputManager.prototype.setInputStyle = function () {
        // var hero:Role = this.channel.postCommand(ConstName.ROLE_CONTROLLER,ConstName.ROLE_GET_ROLE_BY_ID,["female",0]) as Role;
        // this._roleControll = hero.roleControll;
        // if(Browser.onAndroid || !Browser.onPC) {
        // 	//如果是移动平台，则显示移动控制ui
        // 	this.channel.postCommand(ConstName.UI_CONTROLLER,ConstName.SHOW_VIEW_BY_NAME,[ConstName.MOVE_VIEW]);
        // }
        // else if (Browser.onPC)
        // {
        // 	Laya.stage.on(Event.KEY_DOWN, this, this.heroControll);
        // 	Laya.stage.on(Event.KEY_UP, this, this.heroControll);
        // 	Stat.show(0,0);
        // }
    };
    InputManager.prototype.heroControll = function (evt) {
        if (evt.keyCode == Laya.Keyboard.D || evt.keyCode == Laya.Keyboard.A) {
            if (evt.type == Laya.Event.KEY_DOWN) {
                this._roleControll.isMove = true;
                this._roleControll.rx = evt.keyCode == Laya.Keyboard.D ? 1 : -1;
            }
            else {
                this._roleControll.isMove = false;
                this._roleControll.rx = 0;
            }
        }
        if (evt.keyCode == Laya.Keyboard.W || evt.keyCode == Laya.Keyboard.S) {
            if (evt.type == Laya.Event.KEY_DOWN) {
                this._roleControll.isMove = true;
                this._roleControll.ry = evt.keyCode == Laya.Keyboard.S ? 1 : -1;
            }
            else {
                this._roleControll.isMove = false;
                this._roleControll.ry = 0;
            }
        }
    };
    return InputManager;
}(BaseManager_1.default));
exports.default = InputManager;
},{"./BaseManager":17}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
var SceneLayerManager_1 = require("./SceneLayerManager");
var UILayerManager_1 = require("./UILayerManager");
var ConstName_1 = require("../ConstName");
/**
 * 游戏资源层次管理
 * 场景层，人物层，UI层
 * 每个层管理自己的层次
 * @author jwd
 */
var LayerManager = /** @class */ (function (_super) {
    __extends(LayerManager, _super);
    function LayerManager(channel) {
        var _this = _super.call(this, channel) || this;
        _this._sceneManager = new SceneLayerManager_1.default(channel);
        // this._roleLayerManager = new RoleLayerManager(channel);
        _this._uiLayerManager = new UILayerManager_1.default(channel);
        return _this;
    }
    LayerManager.prototype.init = function () {
        //最后层背景
        this._sceneManager.setRearLayerIndex(0);
        //中层背景
        this._sceneManager.setMiddleLayerIndex(1);
        //角色层
        this._sceneManager.setRoleLayerIndex(2);
        //子弹层
        this._sceneManager.setBulletLayerIndex(3);
        //特效子弹层
        this._sceneManager.setEffectLayerIndex(4);
        //角色预留层4
        //角色预留层5
        //角色预留层6
        //近层背景
        this._sceneManager.setFrontLayerIndex(7);
        //模块UI层
        this._uiLayerManager.setMainUILayerIndex(8);
        //弹出ui层
        this._uiLayerManager.setAlertUILayerIndex(9);
        //文字提示层
        this._uiLayerManager.setTipUILayerIndex(10);
    };
    LayerManager.prototype.getUILayer = function () {
        return this._uiLayerManager.uiLayer;
    };
    LayerManager.prototype.getSceneLayer = function () {
        return this._sceneManager.sceneLayer;
    };
    LayerManager.prototype.getSceneLayerByName = function (roleLayerType) {
        switch (roleLayerType) {
            case ConstName_1.default.ROLE_LAYER:
                return this._sceneManager.roleLayer;
                break;
            case ConstName_1.default.BULLET_LAYER:
                return this._sceneManager.bulletLayer;
                break;
            case ConstName_1.default.EFFECT_LAYER:
                return this._sceneManager.effectLayer;
                break;
        }
        return new Laya.Sprite();
    };
    LayerManager.prototype.getUILayerByName = function (uiLayerType) {
        switch (uiLayerType) {
            case ConstName_1.default.MAIN_UI_LAYER:
                return this._uiLayerManager.mainUILayer;
                break;
            case ConstName_1.default.ALERT_UI_LAYER:
                return this._uiLayerManager.alertUILayer;
                break;
            case ConstName_1.default.TIP_UI_LAYER:
                return this._uiLayerManager.tipUILayer;
                break;
        }
        return new Laya.Sprite();
    };
    LayerManager.prototype.createScene = function (params) {
        var sceneId = params[0];
        this._sceneManager.createScene(sceneId);
    };
    return LayerManager;
}(BaseManager_1.default));
exports.default = LayerManager;
},{"../ConstName":4,"./BaseManager":17,"./SceneLayerManager":24,"./UILayerManager":25}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
var GameGlobal_1 = require("../GameGlobal");
var LoadManager = /** @class */ (function (_super) {
    __extends(LoadManager, _super);
    function LoadManager(channel) {
        return _super.call(this, channel) || this;
    }
    LoadManager.getUrl = function (url, type) {
        if (type === void 0) { type = -1; }
        if (type == GameGlobal_1.default.ROLE)
            return GameGlobal_1.default.RESOURCE_ROLE_PATH + url;
        else if (type == GameGlobal_1.default.SOUND) {
            if (Laya.Browser.onAndroid || Laya.Browser.onIOS) {
                return GameGlobal_1.default.RESOURCE_SOUND_PATH + url + ".wav";
            }
            else {
                return GameGlobal_1.default.RESOURCE_SOUND_PATH + url + ".mp3";
            }
        }
        else if (type == GameGlobal_1.default.UI)
            return GameGlobal_1.default.RESOURCE_UI_PATH + url;
        else if (type == GameGlobal_1.default.SCENE)
            return GameGlobal_1.default.RESOURCE_SCENE_PATH + url;
        else if (type == GameGlobal_1.default.JSON)
            return GameGlobal_1.default.RESOURCE_JSON_PATH + url;
        return GameGlobal_1.default.RESOURCE_BASE_PATH + url;
    };
    LoadManager.getIconUrl = function (type, id) {
        return "views/icon/" + type + "_" + id + ".png";
    };
    LoadManager.getRes = function (url, type) {
        if (type === void 0) { type = -1; }
        var resUrl = LoadManager.getUrl(url, type);
        return Laya.loader.getRes(resUrl);
    };
    return LoadManager;
}(BaseManager_1.default));
exports.default = LoadManager;
},{"../GameGlobal":6,"./BaseManager":17}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
var Hero_1 = require("../role/Hero");
var Enemy_1 = require("../role/Enemy");
var ConstName_1 = require("../ConstName");
var RoleManager = /** @class */ (function (_super) {
    __extends(RoleManager, _super);
    function RoleManager(channel) {
        var _this = _super.call(this, channel) || this;
        _this._heroList = new Array();
        _this._enemyList = new Array();
        _this._roleControllHash = new Object();
        //敌人缓冲池，避免重复创建
        _this._roleCacheList = new Array();
        /**避免重复创建 */
        _this.recycleList = new Array();
        return _this;
    }
    RoleManager.prototype.init = function () {
        Laya.timer.loop(30, this, this.update);
    };
    /** 根据角色id获取角色，无论在什么
     * 阶段都能获取到角色对象，除了角色的
     * 显示资源（采用异步加载填充），数据都会存在，
     * */
    RoleManager.prototype.getHero = function (params) {
        var roleName = params[0];
        var roleId = params[1];
        var hero;
        for (var heroID in this._heroList) {
            hero = this._heroList[heroID];
            if (hero.roleId == roleId)
                return hero;
        }
        hero = new Hero_1.default(roleName, roleId);
        // hero.bulletGroup = this.channel.postCommand(ConstName.BATTLE_CONTROLLER,ConstName.BATTLE_CREATE_BULLET_GROUP,[roleId]) as BaseBulletGroup;
        // hero.setBulletSkin();
        hero.setSkin("female.atlas");
        hero.setAnimation("move");
        this._heroList.push(hero);
        return hero;
    };
    RoleManager.prototype.getHeroList = function () {
        return this._heroList;
    };
    RoleManager.prototype.addHero = function (params) {
        var roleName = params[0];
        var roleId = params[1];
        var pos = params[2];
        var hero = this.getHero([roleName, roleId]);
        if (hero) {
            hero.setSkin(roleName + ".atlas");
            hero.setAnimation("move");
            hero.addStage(pos);
        }
    };
    /** 根据角色id获取敌人，如果缓冲池中有
     * 该类型的敌人，那就取出，如果没有，则
     * 创建
     * */
    RoleManager.prototype.getEnemy = function (params) {
        var roleName = params[0];
        var roleId = params[1];
        var enemy;
        for (var i = 0, len = this._roleCacheList.length; i < len; i--) {
            enemy = this._roleCacheList[i];
            console.log("从回收池中创建敌人");
            this._roleCacheList.splice(i, 1);
            return enemy;
        }
        enemy = new Enemy_1.default(roleName, roleId);
        enemy.setSkin("monster/" + roleName + ".atlas");
        // if(enemy.hasBullet){
        // 	enemy.bulletGroup = this.channel.postCommand(ConstName.BATTLE_CONTROLLER,ConstName.BATTLE_CREATE_BULLET_GROUP,[roleId]) as BaseBulletGroup;
        // 	enemy.setBulletSkin();
        // }
        return enemy;
    };
    RoleManager.prototype.addEnemy = function (params) {
        if (this._enemyList.length > 8)
            return;
        var roleName = params[0];
        var roleId = params[1];
        var pos = params[2];
        var enemy = this.getEnemy([roleName, roleId]);
        if (enemy) {
            enemy.init();
            enemy.setAnimation("move");
            enemy.gameAni.x = Math.ceil(pos.x);
            enemy.gameAni.y = Math.ceil(pos.y);
            var roleLayer = this.channel.postCommand(ConstName_1.default.LAYER_CONTROLLER, ConstName_1.default.LAYER_GET_SCENE_LAYER_BY_NAME, ConstName_1.default.ROLE_LAYER);
            roleLayer.addChild(enemy.gameAni);
            var effectLayer = this.channel.postCommand(ConstName_1.default.LAYER_CONTROLLER, ConstName_1.default.LAYER_GET_SCENE_LAYER_BY_NAME, ConstName_1.default.EFFECT_LAYER);
            effectLayer.addChild(enemy.bulletGroup);
            this._enemyList.push(enemy);
        }
    };
    RoleManager.prototype.getEnemyList = function () {
        return this._enemyList;
    };
    RoleManager.prototype.setSceneSpeed = function (params) {
        // var sceneSpeed:Number = params[0];
        // for each (var hero:Hero in _heroList)
        // {
        // 	hero.sceneSpeed = sceneSpeed;
        // }
    };
    RoleManager.prototype.update = function () {
        // for each (var hero:Hero in _heroList)
        // {
        // 	hero.update();
        // }
        // for each (var enemy:Enemy in _enemyList)
        // {
        // 	enemy.update();
        // 	if(enemy.isRecycle){
        // 		recycleList.push(enemy);
        // 	}
        // }
        // if(recycleList.length>0) {
        // 	for each(var recycle:Enemy in recycleList) {
        // 		recycleBulletFunc(recycle);
        // 	}
        // 	recycleList.splice(0,recycleList.length);
        // }
    };
    /**回收敌人机制 */
    RoleManager.prototype.recycleBulletFunc = function (enemy) {
        // enemy.recycle();
        // var enemyIndex:Number = _enemyList.indexOf(enemy);
        // _enemyList.splice(enemyIndex,1);
        // _roleCacheList.push(enemy);
    };
    return RoleManager;
}(BaseManager_1.default));
exports.default = RoleManager;
},{"../ConstName":4,"../role/Enemy":31,"../role/Hero":33,"./BaseManager":17}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
/**
 * ...
 * @author jwd
 */
var SceneLayerManager = /** @class */ (function (_super) {
    __extends(SceneLayerManager, _super);
    function SceneLayerManager(channel) {
        var _this = _super.call(this, channel) || this;
        _this.rearSpeed = 0;
        _this.middleSpeed = 0;
        _this.frontSpeed = 0;
        _this.sceneLayer = new Laya.Sprite();
        _this.frontLayer = new Laya.Sprite();
        _this.middleLayer = new Laya.Sprite();
        _this.rearLayer = new Laya.Sprite();
        _this.roleLayer = new Laya.Sprite();
        _this.bulletLayer = new Laya.Sprite();
        _this.effectLayer = new Laya.Sprite();
        Laya.stage.addChild(_this.sceneLayer);
        return _this;
    }
    SceneLayerManager.prototype.getWorldLayer = function () {
        return this.sceneLayer;
    };
    SceneLayerManager.prototype.setFrontLayerIndex = function (index) {
        this.sceneLayer.addChild(this.frontLayer);
        this.frontLayer.zOrder = index;
    };
    SceneLayerManager.prototype.setMiddleLayerIndex = function (index) {
        this.sceneLayer.addChild(this.middleLayer);
        this.middleLayer.zOrder = index;
    };
    SceneLayerManager.prototype.setRearLayerIndex = function (index) {
        this.sceneLayer.addChild(this.rearLayer);
        this.rearLayer.zOrder = index;
    };
    SceneLayerManager.prototype.setRoleLayerIndex = function (index) {
        this.sceneLayer.addChild(this.roleLayer);
        this.roleLayer.zOrder = index;
    };
    SceneLayerManager.prototype.setBulletLayerIndex = function (index) {
        this.sceneLayer.addChild(this.bulletLayer);
        this.bulletLayer.zOrder = index;
    };
    SceneLayerManager.prototype.setEffectLayerIndex = function (index) {
        this.sceneLayer.addChild(this.effectLayer);
        this.effectLayer.zOrder = index;
    };
    /** 生成场景*/
    SceneLayerManager.prototype.createScene = function (sceneId) {
        Laya.Scene.open("scene/" + sceneId + ".scene", true, Laya.Handler.create(this, this.addScene));
    };
    /**对场景显示对象进行分层处理 */
    SceneLayerManager.prototype.addScene = function (scene) {
        this.sceneSprite = scene;
        if (this.sceneSprite.rearLayer != null) {
            this.rearLayer.addChild(scene.rearLayer);
            this.rearSpeed = this.sceneSprite.rearLayer.speed;
        }
        if (this.sceneSprite.roleLayer != null) {
            this.middleSpeed = this.sceneSprite.roleLayer.speed;
            this.middleLayer.addChild(scene.roleLayer);
        }
        if (this.sceneSprite.frontLayer != null) {
            this.frontLayer.addChild(scene.frontLayer);
            this.frontSpeed = this.sceneSprite.frontLayer.speed;
        }
        Laya.SoundManager.playMusic("resource/sound/bg_music.mp3");
        // this.channel.postCommand(ConstName.ROLE_CONTROLLER,ConstName.ROLE_SCENE_SPEED,[-_middleSpeed]);
        // Laya.timer.loop(30,this,this.update);
    };
    /**更新场景移动 */
    SceneLayerManager.prototype.update = function () {
        if (this.sceneSprite) {
            var layerSpriteName;
            var layerSprite;
            //逐渐优化中，先写死
            //中景层
            if (this.middleSpeed) {
                for (layerSpriteName in this.sceneSprite.middleList) {
                    layerSprite = this.sceneSprite.middleList[layerSpriteName];
                    layerSprite.x -= this.sceneSprite.roleLayer.speed;
                    //6666真坑，displayWidth 尽然可以为负数（当scaleX 为-数的时候）
                    if (layerSprite.x < -Math.abs(layerSprite.displayWidth)) {
                        layerSprite.x = this.sceneSprite.middleEnd.x + Math.abs(this.sceneSprite.middleEnd.displayWidth) - this.sceneSprite.roleLayer.speed;
                        this.sceneSprite.middleEnd = layerSprite;
                    }
                }
            }
            //前景层
            if (this.frontSpeed) {
                for (layerSpriteName in this.sceneSprite.frontList) {
                    layerSprite = this.sceneSprite.frontList[layerSpriteName];
                    layerSprite.x -= this.sceneSprite.frontLayer.speed;
                    //6666真坑，displayWidth 尽然可以为负数（当scaleX 为-数的时候）
                    if (layerSprite.x < -Math.abs(layerSprite.displayWidth)) {
                        layerSprite.x = this.sceneSprite.frontEnd.x + Math.abs(this.sceneSprite.frontEnd.displayWidth) - this.sceneSprite.frontLayer.speed;
                        this.sceneSprite.frontEnd = layerSprite;
                    }
                }
            }
            //远景层
            if (this.rearSpeed) {
                for (layerSpriteName in this.sceneSprite.rearList) {
                    layerSprite = this.sceneSprite.rearList[layerSpriteName];
                    layerSprite.x -= this.sceneSprite.rearLayer.speed;
                    //6666真坑，displayWidth 尽然可以为负数（当scaleX 为-数的时候）
                    if (layerSprite.x < -Math.abs(layerSprite.displayWidth)) {
                        layerSprite.x = this.sceneSprite.rearEnd.x + Math.abs(this.sceneSprite.rearEnd.displayWidth) - this.sceneSprite.rearLayer.speed;
                        this.sceneSprite.rearEnd = layerSprite;
                    }
                }
            }
        }
    };
    /**释放场景资源*/
    SceneLayerManager.prototype.clear = function () {
        this.frontLayer.removeChildren();
        this.middleLayer.removeChildren();
        this.rearLayer.removeChildren();
    };
    SceneLayerManager.prototype.destroy = function () {
        this.frontLayer.destroy(true);
        this.frontLayer = null;
        this.middleLayer.destroy(true);
        this.middleLayer = null;
        this.rearLayer.destroy(true);
        this.rearLayer = null;
    };
    return SceneLayerManager;
}(BaseManager_1.default));
exports.default = SceneLayerManager;
},{"./BaseManager":17}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
/**
 * ...
 * @author jwd
 */
var UILayerManager = /** @class */ (function (_super) {
    __extends(UILayerManager, _super);
    function UILayerManager(channel) {
        var _this = _super.call(this, channel) || this;
        _this.uiLayer = new Laya.Sprite();
        _this.mainUILayer = new Laya.Sprite();
        _this.alertUILayer = new Laya.Sprite();
        _this.tipUILayer = new Laya.Sprite();
        Laya.stage.addChild(_this.uiLayer);
        return _this;
    }
    UILayerManager.prototype.setMainUILayerIndex = function (index) {
        this.uiLayer.addChild(this.mainUILayer);
        this.mainUILayer.zOrder = index;
    };
    UILayerManager.prototype.setAlertUILayerIndex = function (index) {
        this.uiLayer.addChild(this.alertUILayer);
        this.alertUILayer.zOrder = index;
    };
    UILayerManager.prototype.setTipUILayerIndex = function (index) {
        this.uiLayer.addChild(this.tipUILayer);
        this.tipUILayer.zOrder = index;
    };
    return UILayerManager;
}(BaseManager_1.default));
exports.default = UILayerManager;
},{"./BaseManager":17}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
var GameEvent_1 = require("../GameEvent");
var ConstName_1 = require("../ConstName");
var JsonConfig_1 = require("../JsonConfig");
var LoadManager_1 = require("./LoadManager");
var GameGlobal_1 = require("../GameGlobal");
/**
 * ...
 * @author jwd
 */
var UIManager = /** @class */ (function (_super) {
    __extends(UIManager, _super);
    function UIManager(channel) {
        var _this = _super.call(this, channel) || this;
        _this._viewInsHash = new Object();
        GameEvent_1.default.ins.on(ConstName_1.default.SHOW_VIEW, _this, _this.showView);
        return _this;
    }
    //注册各种界面
    UIManager.prototype.init = function () {
    };
    //获取界面,如果没有界面实例则创建
    UIManager.prototype.getView = function (viewName, viewData) {
        var view = this._viewInsHash[viewName] || this.createView(viewName, viewData);
        return view;
    };
    /** 生成界面*/
    UIManager.prototype.createView = function (viewName, viewData) {
        var viewVo = JsonConfig_1.default.viewConfigVoJson[viewName];
        // Laya.View.load("views/" + viewVo.resourceUrl,Laya.Handler.create(this, this.loadViewJson,[viewName]));
        Laya.Scene.open("views/" + viewVo.resourceUrl, true, Laya.Handler.create(this, this.loadViewJson, [viewName, viewData]));
    };
    /**解析界面配置文件，如果有的话 */
    UIManager.prototype.loadViewJson = function (viewName, viewData, view) {
        if (view) {
            view.viewData = viewData;
            var viewVo = JsonConfig_1.default.viewConfigVoJson[viewName];
            if (viewVo.jsonName)
                Laya.loader.load(LoadManager_1.default.getUrl(viewVo.jsonName, GameGlobal_1.default.JSON), new Laya.Handler(this, this.addView, [viewName, view]));
            else
                this.addView(viewName, view);
        }
    };
    /**加载完成后初次显示界面 */
    UIManager.prototype.addView = function (viewName, view) {
        if (view) {
            this._viewInsHash[viewName] = view;
            view.viewName = viewName;
            var viewVo = JsonConfig_1.default.viewConfigVoJson[viewName];
            if (viewVo.jsonName)
                JsonConfig_1.default.ins.setVo(viewName, LoadManager_1.default.getRes(viewVo.jsonName, GameGlobal_1.default.JSON));
            var uiLayer = this.channel.postCommand(ConstName_1.default.LAYER_CONTROLLER, ConstName_1.default.LAYER_GET_UI_LAYER_BY_NAME, ConstName_1.default.MAIN_UI_LAYER);
            view.showSelf(viewVo.closeOther, viewVo.isModel, uiLayer);
            view.init();
        }
    };
    //显示界面
    UIManager.prototype.showView = function (params) {
        var viewName = params[0];
        var viewData = params[1];
        //判断是否开启当前模块 ,预留
        var view = this.getView(viewName, viewData);
        if (view) {
            view.viewData = viewData;
            var viewVo = JsonConfig_1.default.viewConfigVoJson[viewName];
            var uiLayer = this.channel.postCommand(ConstName_1.default.LAYER_CONTROLLER, ConstName_1.default.LAYER_GET_UI_LAYER_BY_NAME, ConstName_1.default.MAIN_UI_LAYER);
            view.showSelf(viewVo.closeOther, viewVo.isModel, uiLayer);
            view.init();
        }
    };
    UIManager.prototype.removeViewByName = function (viewName) {
        var view = this._viewInsHash[viewName];
        if (view) {
            view.removeSelf();
        }
    };
    UIManager.prototype.destroyViewByName = function (viewName) {
        delete this._viewInsHash[viewName];
    };
    UIManager.prototype.destroy = function () {
        for (var controlName in this._viewInsHash) {
            var view = this._viewInsHash[controlName];
            view.destroy(true);
            delete this._viewInsHash[controlName];
        }
        this._viewInsHash = null;
    };
    return UIManager;
}(BaseManager_1.default));
exports.default = UIManager;
},{"../ConstName":4,"../GameEvent":5,"../GameGlobal":6,"../JsonConfig":7,"./BaseManager":17,"./LoadManager":22}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**玩家数据代理,处理玩家各种数据,主要有通知，存档，获取存档等数据操作*/
var DataProxy = /** @class */ (function () {
    function DataProxy(channel) {
        this.funcListObj = new Object();
        this.channel = channel;
    }
    DataProxy.prototype.init = function () {
    };
    /**
     * 注册数据改变处理
    */
    DataProxy.prototype.addDataFunc = function (dataName, func, thisObj) {
        if (!this.funcListObj.hasOwnProperty(dataName)) {
            this.funcListObj[dataName] = [];
        }
        this.funcListObj[dataName].push(new Array(func, thisObj));
    };
    /**
     * 广播并执行命令
    */
    DataProxy.prototype.executeCommand = function (commandName, params) {
        var funcArr = this.funcListObj[commandName];
        for (var funcName in funcArr) {
            var funcListArr = funcArr[funcName];
            for (var i = 0; i < funcListArr.length; i++) {
                var func = funcListArr[0];
                var thisObj = funcListArr[1];
                func && func.call(thisObj, params);
            }
        }
    };
    return DataProxy;
}());
exports.default = DataProxy;
},{}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataProxy_1 = require("./DataProxy");
var InstallationProxy = /** @class */ (function (_super) {
    __extends(InstallationProxy, _super);
    function InstallationProxy(channel) {
        return _super.call(this, channel) || this;
    }
    return InstallationProxy;
}(DataProxy_1.default));
exports.default = InstallationProxy;
},{"./DataProxy":27}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ActionControll = /** @class */ (function () {
    function ActionControll(roleId) {
        //每个角色都有一个唯一的roleId
        this._roleId = 1;
        //x移动系数
        this._rx = 0;
        //y移动系数
        this._ry = 0;
        this._roleId = roleId;
    }
    Object.defineProperty(ActionControll.prototype, "roleId", {
        get: function () {
            return this._roleId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActionControll.prototype, "rx", {
        get: function () {
            return this._rx;
        },
        set: function (value) {
            this._rx = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActionControll.prototype, "ry", {
        get: function () {
            return this._ry;
        },
        set: function (value) {
            this._ry = value;
        },
        enumerable: true,
        configurable: true
    });
    return ActionControll;
}());
exports.default = ActionControll;
},{}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseAnimation = /** @class */ (function (_super) {
    __extends(BaseAnimation, _super);
    function BaseAnimation() {
        return _super.call(this) || this;
    }
    /**
     * 创建一组动画的url数组（美术资源地址数组）
     * @param aniName  动作的名称，用于生成url
     * @param length   动画最后一帧的索引值，
     */
    BaseAnimation.prototype.aniUrls = function (aniName, length) {
        var urls = [];
        for (var i = 0; i < length; i++) {
            //动画资源路径要和动画图集打包前的资源命名对应起来
            urls.push(this._prefix + aniName + "_" + i + ".png");
        }
        return urls;
    };
    return BaseAnimation;
}(Laya.Animation));
exports.default = BaseAnimation;
},{}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Role_1 = require("./Role");
/**
 * ...
 * @author jwd
 */
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy(roleName, roleId) {
        return _super.call(this, roleName, roleId) || this;
    }
    Enemy.prototype.init = function () {
        _super.prototype.init.call(this);
        this.isRecycle = false;
        this.isDie = false;
        this._roleControll.isMove = true;
        this._roleControll.rx = -1;
        this._hurt = 6;
    };
    Enemy.prototype.update = function () {
        // if(this._roleControll.isMove) {
        //     // if(!lastTime)lastTime = (new Date()).getTime();
        //     // deltTime = ((new Date()).getTime() - lastTime);
        //     // var posX:number = this._gameAni.x + ((this._roleControll.rx*speed + sceneSpeed) * deltTime)/20 ;
        //     var posX:number = this._gameAni.x + this._roleControll.rx*speed ;
        //     var posY:number = this._gameAni.y + this._roleControll.ry*speed;
        //     var moveBounds:Array = this._gameAni.moveBoundsArr;
        //     this._gameAni.x = posX;
        //     this._gameAni.y = posY;
        // 	if(posX < -50) {
        // 		this.isRecycle = true;
        // 	}
        //     // lastTime = (new Date()).getTime();
        // 	if(this.hasBullet){
        // 		deltTime++;
        // 		if(deltTime ==  bulletConfigVo.deltTime){
        // 			this.deltTime = 0;
        // 			transformPoint.x = localPoint.x;
        // 			transformPoint.y = localPoint.y;
        // 			this._gameAni.localToGlobal(transformPoint);
        // 			this.bulletGroup.addBullet(transformPoint);
        // 		}
        // 	}
        // }
        // this.isMove = this._roleControll.isMove;
    };
    Object.defineProperty(Enemy.prototype, "isMove", {
        set: function (value) {
            // if(_isDie||_isHurt) return;
            // if(_isMove != value) {
            //     _isMove = value;
            //     if(value) {
            //         setAnimation("move");
            //     }else {
            //         setAnimation("move");
            //     }
            // }
        },
        enumerable: true,
        configurable: true
    });
    Enemy.prototype.dieComplete = function () {
        _super.prototype.dieComplete.call(this);
        this.isRecycle = true;
    };
    Enemy.prototype.beHurted = function () {
        this._hurt--;
        if (this._hurt <= 0) {
            this.isDie = true;
            return;
        }
        this.isHurt = true;
    };
    return Enemy;
}(Role_1.default));
exports.default = Enemy;
},{"./Role":34}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseAnimation_1 = require("./BaseAnimation");
var LoadManager_1 = require("../manager/LoadManager");
var GameGlobal_1 = require("../GameGlobal");
var GameAnimation = /** @class */ (function (_super) {
    __extends(GameAnimation, _super);
    function GameAnimation() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._actionNameList = [];
        _this._actionFrame = new Object();
        _this._isLoaded = false;
        //角色移动边界，上，下，左，右
        _this.moveBoundsArr = [0, 0, 0, 0];
        return _this;
    }
    GameAnimation.prototype.loadAtlas = function (url, loaded, cacheName) {
        if (loaded === void 0) { loaded = null; }
        if (cacheName === void 0) { cacheName = ""; }
        this._loadUrl = LoadManager_1.default.getUrl(url, GameGlobal_1.default.ROLE);
        return _super.prototype.loadAtlas.call(this, this._loadUrl, Laya.Handler.create(this, this.onLoaded));
    };
    GameAnimation.prototype.startLoad = function () {
        Laya.loader.load(this._loadUrl, Laya.Handler.create(this, this.onLoaded));
    };
    GameAnimation.prototype.onLoaded = function () {
        this._isLoaded = true;
        var _e = Laya.loader.getRes(this._loadUrl);
        this._prefix = _e.meta.prefix;
        var frames = _e.frames;
        //生成动作列表
        for (var fullName in frames) {
            var actionName = fullName.split("_")[0];
            if (this._actionNameList.indexOf(actionName) < 0) {
                this._actionNameList.push(actionName);
                this._actionFrame[actionName] = 1;
            }
            else
                this._actionFrame[actionName]++;
        }
        this.playAction("move");
    };
    GameAnimation.prototype.hasAction = function (actionName) {
        return this._actionNameList.indexOf(actionName) > -1;
    };
    GameAnimation.prototype.playAction = function (actionName, start, loop, name) {
        if (start === void 0) { start = 0; }
        if (loop === void 0) { loop = true; }
        if (name === void 0) { name = GameAnimation.MODUL; }
        if (!this._isLoaded || this._actionNameList.indexOf(actionName) == -1)
            return;
        if (this._currentActionName == actionName)
            return;
        this._currentActionName = actionName;
        Laya.Animation.createFrames(this.aniUrls(actionName, this._actionFrame[actionName]), GameAnimation.MODUL);
        this.play(start, loop, actionName);
        if (!this.graphics._one) {
            debugger;
        }
        this.pivot(this.graphics._one.width / 2, 0);
        var moveBoundsRect = this.getGraphicBounds();
        this.moveBoundsArr[1] = Laya.stage.height - moveBoundsRect.height;
        this.moveBoundsArr[3] = Laya.stage.width - moveBoundsRect.width / 2;
        // debugger;
    };
    GameAnimation.prototype.recycle = function () {
        // this.stop();
        // this.parent && (this.parent.removeChild(this));
    };
    GameAnimation.MODUL = "modul";
    return GameAnimation;
}(BaseAnimation_1.default));
exports.default = GameAnimation;
},{"../GameGlobal":6,"../manager/LoadManager":22,"./BaseAnimation":30}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Role_1 = require("./Role");
var CommandChannel_1 = require("../controller/CommandChannel");
var ConstName_1 = require("../ConstName");
/**
 * ...
 * @author jwd
 */
var Hero = /** @class */ (function (_super) {
    __extends(Hero, _super);
    function Hero(roleName, roleId) {
        var _this = _super.call(this, roleName, roleId) || this;
        _this._faBaoArr = [];
        //记录角色位置列表
        _this._posArr = [];
        return _this;
        // for(var i:number =0;i<this.roleSettingVo.fbArr.length;i++){
        //     var faBao:FaBao = new FaBao();
        //     faBao.setFaBaoSkin(roleSettingVo.fbArr[i]);
        //     _faBaoArr.push(faBao);
        // }
    }
    Hero.prototype.addStage = function (pos) {
        var channel = CommandChannel_1.default.instance;
        this.gameAni.x = Math.ceil(pos.x);
        this.gameAni.y = Math.ceil(pos.y);
        var roleLayer = channel.postCommand(ConstName_1.default.LAYER_CONTROLLER, ConstName_1.default.LAYER_GET_SCENE_LAYER_BY_NAME, ConstName_1.default.ROLE_LAYER);
        roleLayer.addChild(this.gameAni);
        // for each(var faBao:FaBao in this._faBaoArr){
        //     roleLayer.addChild(faBao);
        //     var faBaoX:number = pos.x + parsenumber(faBao.fbConfigVo.startPosX);
        //     var faBaoY:number;
        //     var startPosY:string = faBao.fbConfigVo.startPosY;
        //     if(startPosY.indexOf("-") ==startPosY.length -1){
        //         //相对角色头顶偏移距离定位置
        //         faBaoY = pos.y - roleSettingVo.roleHeight + parsenumber(startPosY.substr(0,startPosY.length -1));
        //     }else if(parseFloat(startPosY) <1){
        //         //按照角色身高定位置
        //         faBaoY = pos.y - roleSettingVo.roleHeight * parsenumber(startPosY.substr(0,startPosY.length -1));
        //     }else {
        //         //按照角色位置偏移
        //         faBaoY = pos.y + parsenumber(startPosY);
        //     }
        //     var faBaoPos :Ponumber = new Ponumber(faBaoX,faBaoY);
        //     faBao.addFaBao(faBaoPos);
        // }
        // var bulletLayer:Sprite = channel.postCommand(ConstName.LAYER_CONTROLLER, ConstName.GET_ROLE_LAYER,[ConstName.BULLET_LAYER]) as Sprite;
        // bulletLayer.addChild(this.bulletGroup);
    };
    Hero.prototype.update = function () {
        // var rect:Rectangle = this._gameAni.getGraphicBounds();
        // this._gameAni.graphics.drawRect(rect.x,rect.y,rect.width,rect.height,"#000000");
        // if(this._roleControll.isMove) {
        //     // if(!lastTime)lastTime = (new Date()).getTime();
        //     // deltTime = ((new Date()).getTime() - lastTime);
        //     // var posX:number = this._gameAni.x + ((this._roleControll.rx*speed + sceneSpeed) * deltTime)/20 ;
        //     var posX:number = this._gameAni.x + this._roleControll.rx*speed ;
        //     var posY:number = this._gameAni.y + this._roleControll.ry*speed;
        //     var moveBounds:Array = this._gameAni.moveBoundsArr;
        //     if(posX > moveBounds[2]  && posX  < moveBounds[3])
        //         this._gameAni.x = posX;
        //     if(posY  > moveBounds[0] && posY  < moveBounds[1])
        //         this._gameAni.y = posY;
        //     // lastTime = (new Date()).getTime();
        //     if(_posArr.length < 150)
        //     {
        //         _posArr.unshift(new Ponumber(this._gameAni.x,this._gameAni.y));
        //     }else {
        //         _posArr.pop();
        //         _posArr.unshift(new Ponumber(this._gameAni.x,this._gameAni.y));
        //     }
        //     for each(var faBao:FaBao in this._faBaoArr){
        //     var pos:Ponumber = _posArr[faBao.fbConfigVo.posNo];
        //         if(pos){
        //             faBao.pos(pos.x,pos.y);
        //         }
        //         faBao.update();
        //     }
        // }
        // if(hasBullet){
        //     deltTime++;
        //     if(deltTime == bulletConfigVo.deltTime){
        //         this.deltTime = 0;
        //         transformPonumber.x = localPonumber.x;
        //         transformPonumber.y = localPonumber.y;
        //         this._gameAni.localToGlobal(transformPonumber);
        //         this.bulletGroup.addBullet(transformPonumber);
        //         SoundManager.playSound(LoadManager.getUrl(bulletConfigVo.bulletSnd,GameGlobal.SOUND));
        //     }
        // }
        // this.isMove = this._roleControll.isMove;
    };
    Object.defineProperty(Hero.prototype, "isMove", {
        set: function (value) {
            //     if(_isDie) return;
            //     if(_isMove != value) {
            //         _isMove = value;
            //         if(value) {
            //             setAnimation("attack");
            //         }else {
            //             setAnimation("attack");
            //         }
            //     }
            // }
        },
        enumerable: true,
        configurable: true
    });
    return Hero;
}(Role_1.default));
exports.default = Hero;
},{"../ConstName":4,"../controller/CommandChannel":10,"./Role":34}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameAnimation_1 = require("./GameAnimation");
var ActionControll_1 = require("./ActionControll");
var LoadManager_1 = require("../manager/LoadManager");
var GameGlobal_1 = require("../GameGlobal");
var Role = /** @class */ (function () {
    function Role(roleName, roleId) {
        this.speed = 8;
        //场景移动速度，根据此速度修正角色的显示速度
        this.sceneSpeed = 0;
        this._roleId = -1;
        this.transformPoint = new Laya.Point();
        this.localPoint = new Laya.Point();
        this.hasBullet = false;
        this._hurt = 6;
        this._isMove = false;
        this.deltTime = 0;
        this.lastTime = 0;
        this._roleName = roleName;
        this._roleId = roleId;
        this._gameAni = new GameAnimation_1.default();
        this._roleControll = new ActionControll_1.default(roleId);
        // roleSettingVo = JsonConfig.roleSettingJson[roleName];
        // this._gameAni.interval = roleSettingVo.interval;
        // this.speed = roleSettingVo.speed;
        // hasBullet = roleSettingVo.hasBullet;
        // if(hasBullet) {
        //     var bulletPosVo:BulletPosVo = JsonConfig.bulletPosJson[roleName];
        //     localPoint.x = bulletPosVo.posXArr[0];
        //     localPoint.y = bulletPosVo.posYArr[0];
        // }
    }
    Role.prototype.init = function () {
        this._gameAni.play();
    };
    Role.prototype.addStage = function (pos) {
    };
    Role.prototype.setSkin = function (skin) {
        this._gameAni.loadAtlas(skin);
    };
    Role.prototype.setAnimation = function (actionName) {
        this._gameAni.playAction(actionName);
    };
    Role.prototype.setBulletSkin = function () {
        // var roleSettingVo:RoleSettingVo = JsonConfig.roleSettingJson[roleName];
        // this.bulletGroup.setBulletSkin(roleSettingVo.bulletName,roleSettingVo.bulletDir);
        // bulletConfigVo = JsonConfig.bulletConfigJson[roleSettingVo.bulletName];
    };
    Object.defineProperty(Role.prototype, "roleId", {
        get: function () {
            return this._roleId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Role.prototype, "roleName", {
        get: function () {
            return this._roleName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Role.prototype, "gameAni", {
        get: function () {
            return this._gameAni;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Role.prototype, "roleControll", {
        get: function () {
            return this._roleControll;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Role.prototype, "bulletGroup", {
        get: function () {
            return this._bulletGroup;
        },
        set: function (value) {
            this._bulletGroup = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Role.prototype, "isDie", {
        get: function () {
            return this._isDie;
        },
        set: function (value) {
            if (this._isDie == value)
                return;
            if (value) {
                this.setAnimation("die");
                // this._gameAni.once(Event.COMPLETE,this,this.dieComplete)
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Role.prototype, "isHurt", {
        set: function (value) {
            if (this._isHurt == value)
                return;
            if (value) {
                if (this._gameAni.hasAction("hurt")) {
                    this.setAnimation("hurt");
                    // this._gameAni.once(Laya.Event.COMPLETE,this,this.hurtComplete)
                }
                Laya.SoundManager.playSound(LoadManager_1.default.getUrl("beHited_snd", GameGlobal_1.default.SOUND));
            }
        },
        enumerable: true,
        configurable: true
    });
    Role.prototype.hurtComplete = function () {
        this._isHurt = false;
        this._gameAni.playAction("move");
    };
    Role.prototype.dieComplete = function () {
    };
    Object.defineProperty(Role.prototype, "isRecycle", {
        get: function () {
            return this._isRecycle;
        },
        set: function (value) {
            this._isRecycle = value;
        },
        enumerable: true,
        configurable: true
    });
    Role.prototype.update = function () {
    };
    Role.prototype.recycle = function () {
        this._gameAni.recycle();
    };
    Role.prototype.beHurted = function () {
    };
    return Role;
}());
exports.default = Role;
},{"../GameGlobal":6,"../manager/LoadManager":22,"./ActionControll":29,"./GameAnimation":32}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView = /** @class */ (function (_super) {
    __extends(BaseView, _super);
    function BaseView() {
        return _super.call(this) || this;
    }
    BaseView.prototype.createView = function (view) {
        _super.prototype.createView.call(this, view);
    };
    Object.defineProperty(BaseView.prototype, "viewName", {
        set: function (value) {
            this._viewName = value;
        },
        enumerable: true,
        configurable: true
    });
    BaseView.prototype.showSelf = function (closeOther, isModel, uiLayer) {
        this.isModel = isModel;
        if (isModel) {
            //以模式窗口弹出界面
            this.popup(closeOther);
        }
        else if (this.parent != uiLayer) {
            uiLayer.addChild(this);
        }
    };
    BaseView.prototype.removeSelf = function () {
        if (this.isModel)
            Laya.Dialog.manager.maskLayer.removeSelf();
        return _super.prototype.removeSelf.call(this);
    };
    BaseView.prototype.init = function () {
    };
    // public remove():void{
    //     if(this.parent){
    //         this.parent.removeChild(this);
    //     }
    // }
    // public close():void{
    //     super.close();
    //     Laya.Dialog.manager.maskLayer.removeSelf();
    //     let viewVo:ViewConfigVo = JsonConfig.viewConfigVoJson[this._viewName];
    //     if(viewVo.closeAndDestroy)
    //         this.destroy(true);
    // }
    BaseView.prototype.destroy = function (destroyChild) {
        _super.prototype.destroy.call(this, destroyChild);
    };
    return BaseView;
}(Laya.Dialog));
exports.default = BaseView;
},{}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("./BaseView");
var ConstName_1 = require("../ConstName");
var CommandChannel_1 = require("../controller/CommandChannel");
var MainView = /** @class */ (function (_super) {
    __extends(MainView, _super);
    function MainView() {
        var _this = _super.call(this) || this;
        _this._channel = CommandChannel_1.default.instance;
        return _this;
    }
    MainView.prototype.createView = function (view) {
        _super.prototype.createView.call(this, view);
        this.menu_btn.on(Laya.Event.CLICK, this, this.showMenuView);
        this.left_btn.on(Laya.Event.CLICK, this, this.moveScene, [1, 0]);
        this.right_btn.on(Laya.Event.CLICK, this, this.moveScene, [-1, 0]);
        this.down_btn.on(Laya.Event.CLICK, this, this.moveScene, [0, -1]);
        this.up_btn.on(Laya.Event.CLICK, this, this.moveScene, [0, 1]);
        this.moveSceneComplete();
    };
    MainView.prototype.showMenuView = function () {
        CommandChannel_1.default.instance.postCommand(ConstName_1.default.UI_CONTROLLER, ConstName_1.default.UI_SHOW_VIEW_BY_NAME, [ConstName_1.default.MENU_VIEW]);
    };
    MainView.prototype.moveScene = function (toX, toY, evt) {
        this.left_btn.mouseEnabled = false;
        this.right_btn.mouseEnabled = false;
        this.up_btn.mouseEnabled = false;
        this.down_btn.mouseEnabled = false;
        var sceneLayer = this._channel.postCommand(ConstName_1.default.LAYER_CONTROLLER, ConstName_1.default.LAYER_GET_SCENE_LAYER);
        var toDirX = sceneLayer.x;
        var toDirY = sceneLayer.y;
        /**具体场景数据需要表格配置，先写死 */
        if (toX > 0) {
            if (sceneLayer.x < 2 /**左边的场景数量 */ * Laya.stage.width) {
                toDirX = sceneLayer.x + Laya.stage.width;
            }
        }
        else if (toX < 0) {
            if (sceneLayer.x > -1 /**右边的场景数量 */ * Laya.stage.width) {
                toDirX = sceneLayer.x - Laya.stage.width;
            }
        }
        if (toY < 0) {
            if (sceneLayer.y > -1 /**下边的场景数量 */ * Laya.stage.height) {
                toDirY = sceneLayer.y - Laya.stage.height;
            }
        }
        else if (toY > 0) {
            if (sceneLayer.y < 0 /**上边的场景数量 */ * Laya.stage.height) {
                toDirY = sceneLayer.y + Laya.stage.height;
            }
        }
        Laya.Tween.to(sceneLayer, { x: toDirX, y: toDirY }, 200, null, Laya.Handler.create(this, this.moveSceneComplete));
    };
    //场景移动完毕后，根据场景id（其实就是坐标）来设置箭头的可见性
    MainView.prototype.moveSceneComplete = function () {
        var sceneLayer = this._channel.postCommand(ConstName_1.default.LAYER_CONTROLLER, ConstName_1.default.LAYER_GET_SCENE_LAYER);
        //左右箭头
        if (sceneLayer.y == 0) {
            this.left_btn.visible = true;
            this.right_btn.visible = true;
            this.left_btn.mouseEnabled = true;
            this.right_btn.mouseEnabled = true;
            if (sceneLayer.x >= 2 /**左边的场景数量 */ * Laya.stage.width) {
                this.left_btn.visible = false;
            }
            if (sceneLayer.x <= -1 /**右边的场景数量 */ * Laya.stage.width) {
                this.right_btn.visible = false;
            }
        }
        else {
            this.left_btn.visible = false;
            this.right_btn.visible = false;
        }
        //上下箭头
        if (sceneLayer.x == 0) {
            this.up_btn.visible = true;
            this.down_btn.visible = true;
            this.up_btn.mouseEnabled = true;
            this.down_btn.mouseEnabled = true;
            if (sceneLayer.y <= -1 /**下边的场景数量 */ * Laya.stage.height) {
                this.down_btn.visible = false;
            }
            if (sceneLayer.y >= 0 /**上边的场景数量 */ * Laya.stage.height) {
                this.up_btn.visible = false;
            }
        }
        else {
            this.up_btn.visible = false;
            this.down_btn.visible = false;
        }
    };
    MainView.prototype.destroy = function (destroyChild) {
        _super.prototype.destroy.call(this, destroyChild);
        this.left_btn.off(Laya.Event.CLICK, this, this.moveScene);
        this.right_btn.off(Laya.Event.CLICK, this, this.moveScene);
        this.down_btn.off(Laya.Event.CLICK, this, this.moveScene);
        this.up_btn.off(Laya.Event.CLICK, this, this.moveScene);
        this.left_btn = null;
        this.right_btn = null;
        this.down_btn = null;
        this.up_btn = null;
    };
    return MainView;
}(BaseView_1.default));
exports.default = MainView;
},{"../ConstName":4,"../controller/CommandChannel":10,"./BaseView":35}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("../BaseView");
var JsonConfig_1 = require("../../JsonConfig");
var ConstName_1 = require("../../ConstName");
var CommandChannel_1 = require("../../controller/CommandChannel");
var LoadManager_1 = require("../../manager/LoadManager");
var InstallationInfo = /** @class */ (function (_super) {
    __extends(InstallationInfo, _super);
    function InstallationInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InstallationInfo.prototype.createView = function (viewObj) {
        _super.prototype.createView.call(this, viewObj);
        this.use_btn.on(Laya.Event.CLICK, this, this.use);
        // Laya.stage.on(Laya.Event.CLICK,this,(e:Laya.Event)=>{
        //     alert(e.target.name);
        // });
    };
    InstallationInfo.prototype.use = function () {
        if (this.viewData) {
            CommandChannel_1.default.instance.postCommand(ConstName_1.default.GAME_CONTROLLER, ConstName_1.default.GAME_ADD_INSTALLATION, this.viewData);
        }
    };
    InstallationInfo.prototype.showSelf = function (closeOther, isModel, uiLayer) {
        _super.prototype.showSelf.call(this, closeOther, isModel, uiLayer);
        var viewData = this.viewData;
        if (viewData) {
            this.icon.skin = LoadManager_1.default.getIconUrl(viewData.type, viewData.id);
            this.title_txt.text = viewData.installationItemName;
            this.des_txt.text = viewData.descript;
            var menuVo = JsonConfig_1.default.ins.getVo(ConstName_1.default.MENU_VIEW);
            var propertyList = viewData.propertyList;
            for (var i = 1, len = propertyList.length; i <= len; i++) {
                var propertyArr = propertyList[i - 1].split("_");
                this["item_txt_" + i].text = menuVo.propertype[propertyArr[0]] + "   +" + propertyArr[1];
            }
        }
    };
    InstallationInfo.prototype.close = function () {
        _super.prototype.close.call(this);
        Laya.Dialog.manager.maskLayer.removeSelf();
    };
    return InstallationInfo;
}(BaseView_1.default));
exports.default = InstallationInfo;
},{"../../ConstName":4,"../../JsonConfig":7,"../../controller/CommandChannel":10,"../../manager/LoadManager":22,"../BaseView":35}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CommandChannel_1 = require("../../controller/CommandChannel");
var ConstName_1 = require("../../ConstName");
var LoadManager_1 = require("../../manager/LoadManager");
var InstallationItem = /** @class */ (function (_super) {
    __extends(InstallationItem, _super);
    function InstallationItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InstallationItem.prototype.renderView = function () {
        this.owned = this.getChildByName("owned");
        this.owned.visible = false;
        this.icon = this.getChildByName("icon");
        var data = this.dataSource;
        this.icon.skin = LoadManager_1.default.getIconUrl(data.type, data.id);
        this.on(Laya.Event.CLICK, this, this.showInfo);
    };
    InstallationItem.prototype.showInfo = function () {
        var data = this.dataSource;
        if (data != null) {
            CommandChannel_1.default.instance.postCommand(ConstName_1.default.UI_CONTROLLER, ConstName_1.default.UI_SHOW_VIEW_BY_NAME, [ConstName_1.default.INSTALLATION_INFO, data]);
        }
    };
    InstallationItem.prototype.destroy = function (destroyChild) {
        _super.prototype.destroy.call(this, destroyChild);
        this.off(Laya.Event.CLICK, this, this.showInfo);
        this.owned = null;
        this.icon = null;
    };
    return InstallationItem;
}(Laya.Box));
exports.default = InstallationItem;
},{"../../ConstName":4,"../../controller/CommandChannel":10,"../../manager/LoadManager":22}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var InstallationListItem = /** @class */ (function (_super) {
    __extends(InstallationListItem, _super);
    function InstallationListItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InstallationListItem.prototype.renderList = function (cellItem, index) {
        cellItem.renderView();
    };
    InstallationListItem.prototype.renderView = function () {
        var dataSource = this.dataSource;
        this.title_txt = this.getChildByName("title_txt");
        this.installationList = this.getChildByName("installationList");
        this.installationList.renderHandler = new Laya.Handler(this, this.renderList);
        this.installationList.repeatY = Math.ceil(dataSource.installationItemList.length / this.installationList.repeatX);
        this.height = (this.height) * this.installationList.repeatY;
        this.title_txt.text = dataSource.installationName;
        this.installationList.array = dataSource.installationItemList;
    };
    InstallationListItem.prototype.destroy = function (destroyChild) {
        _super.prototype.destroy.call(this, destroyChild);
        this.title_txt = null;
        this.installationList = null;
    };
    return InstallationListItem;
}(Laya.Box));
exports.default = InstallationListItem;
},{}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("../BaseView");
var JsonConfig_1 = require("../../JsonConfig");
var CommandChannel_1 = require("../../controller/CommandChannel");
var ConstName_1 = require("../../ConstName");
var MenuView = /** @class */ (function (_super) {
    __extends(MenuView, _super);
    function MenuView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuView.prototype.createView = function (view) {
        _super.prototype.createView.call(this, view);
        this.list.renderHandler = new Laya.Handler(this, this.renderList);
        this.list.vScrollBarSkin = "";
        this.list.elasticEnabled = true;
    };
    MenuView.prototype.init = function () {
        //设置列表渲染项
        var menuVo = JsonConfig_1.default.ins.getVo(this._viewName);
        this.list.array = menuVo.menuList;
        this.list.width = this.list.getCell(0).width * this.list.repeatX;
    };
    Object.defineProperty(MenuView.prototype, "viewName", {
        set: function (value) {
            this._viewName = value;
        },
        enumerable: true,
        configurable: true
    });
    MenuView.prototype.renderList = function (cellItem, index) {
        cellItem.renderView();
    };
    MenuView.prototype.destroy = function (destroyChild) {
        CommandChannel_1.default.instance.postCommand(ConstName_1.default.UI_CONTROLLER, ConstName_1.default.UI_DESTROY_VIEW_BY_NAME, this._viewName);
        _super.prototype.destroy.call(this, destroyChild);
        this.list = null;
        this.menuTab = null;
    };
    return MenuView;
}(BaseView_1.default));
exports.default = MenuView;
},{"../../ConstName":4,"../../JsonConfig":7,"../../controller/CommandChannel":10,"../BaseView":35}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseVo = /** @class */ (function () {
    function BaseVo() {
    }
    BaseVo.prototype.init = function (obj, jsonObj) {
        if (jsonObj === void 0) { jsonObj = null; }
    };
    return BaseVo;
}());
exports.default = BaseVo;
},{}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseVo_1 = require("./BaseVo");
var InstallationItemVo = /** @class */ (function (_super) {
    __extends(InstallationItemVo, _super);
    function InstallationItemVo() {
        return _super.call(this) || this;
    }
    InstallationItemVo.prototype.init = function (obj) {
        var propNo = 0;
        this.installationItemName = obj[propNo++];
        this.id = obj[propNo++];
        this.descript = obj[propNo++];
        this.sizeArr = obj[propNo++];
        this.propertyList = obj[propNo++];
    };
    return InstallationItemVo;
}(BaseVo_1.default));
exports.default = InstallationItemVo;
},{"./BaseVo":41}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseVo_1 = require("./BaseVo");
var InstallationItemVo_1 = require("./InstallationItemVo");
var InstallationListItemVo = /** @class */ (function (_super) {
    __extends(InstallationListItemVo, _super);
    function InstallationListItemVo() {
        return _super.call(this) || this;
    }
    InstallationListItemVo.prototype.init = function (obj) {
        var propNo = 0;
        this.installationName = obj[propNo++];
        this.type = obj[propNo++];
        this.posArr = obj[propNo++];
        this.installationItemList = this.decode(obj[propNo++]);
    };
    InstallationListItemVo.prototype.decode = function (itemList) {
        var installationItemList = [];
        for (var len = itemList.length, i = 0; i < len; i++) {
            var installationItemVo = new InstallationItemVo_1.default();
            installationItemVo.type = this.type;
            installationItemVo.posArr = this.posArr;
            installationItemVo.init(itemList[i]);
            installationItemList.push(installationItemVo);
        }
        return installationItemList;
    };
    return InstallationListItemVo;
}(BaseVo_1.default));
exports.default = InstallationListItemVo;
},{"./BaseVo":41,"./InstallationItemVo":42}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseVo_1 = require("./BaseVo");
var InstallationListItemVo_1 = require("./InstallationListItemVo");
var MenuVo = /** @class */ (function (_super) {
    __extends(MenuVo, _super);
    function MenuVo() {
        return _super.call(this) || this;
    }
    MenuVo.prototype.init = function (jsonObj) {
        this.menuList = this.decodeList(jsonObj.menuList);
        this.menuInfo = jsonObj.menuInfo;
        this.propertype = jsonObj.propertype;
    };
    MenuVo.prototype.decodeList = function (itemList) {
        var InstallationVoList = [];
        for (var len = itemList.length, i = 0; i < len; i++) {
            var installationVo = new InstallationListItemVo_1.default();
            installationVo.init(itemList[i]);
            InstallationVoList.push(installationVo);
        }
        return InstallationVoList;
    };
    return MenuVo;
}(BaseVo_1.default));
exports.default = MenuVo;
},{"./BaseVo":41,"./InstallationListItemVo":43}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseVo_1 = require("./BaseVo");
var ViewConfigVo = /** @class */ (function (_super) {
    __extends(ViewConfigVo, _super);
    function ViewConfigVo() {
        return _super.call(this) || this;
    }
    ViewConfigVo.prototype.init = function (obj, jsonObj) {
        var propNo = 0;
        this.viewName = obj[propNo++];
        this.resourceUrl = obj[propNo++];
        this.closeOther = obj[propNo++];
        this.isModel = obj[propNo++];
        this.closeAndDestroy = obj[propNo++];
        this.jsonName = obj[propNo++];
        jsonObj[this.viewName] = this;
    };
    return ViewConfigVo;
}(BaseVo_1.default));
exports.default = ViewConfigVo;
},{"./BaseVo":41}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
