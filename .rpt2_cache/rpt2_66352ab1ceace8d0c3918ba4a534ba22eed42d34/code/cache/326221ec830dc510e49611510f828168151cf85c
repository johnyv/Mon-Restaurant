{
  "code": "import { __extends } from \"tslib\";\r\nimport BaseManager from \"./BaseManager\";\r\nvar SceneLayerManager = (function (_super) {\r\n    __extends(SceneLayerManager, _super);\r\n    function SceneLayerManager(channel) {\r\n        var _this = _super.call(this, channel) || this;\r\n        _this._rearSpeed = 0;\r\n        _this._middleSpeed = 0;\r\n        _this._frontSpeed = 0;\r\n        _this._frontLayer = new Laya.Sprite();\r\n        _this._middleLayer = new Laya.Sprite();\r\n        _this._rearLayer = new Laya.Sprite();\r\n        return _this;\r\n    }\r\n    SceneLayerManager.prototype.setFrontLayerIndex = function (index) {\r\n        Laya.stage.addChild(this._frontLayer);\r\n        this._frontLayer.zOrder = index;\r\n    };\r\n    SceneLayerManager.prototype.setMiddleLayerIndex = function (index) {\r\n        Laya.stage.addChild(this._middleLayer);\r\n        this._middleLayer.zOrder = index;\r\n    };\r\n    SceneLayerManager.prototype.setRearLayerIndex = function (index) {\r\n        Laya.stage.addChild(this._rearLayer);\r\n        this._rearLayer.zOrder = index;\r\n    };\r\n    SceneLayerManager.prototype.createScene = function (sceneId) {\r\n        Laya.Scene.open(\"scene/\" + sceneId + \".scene\", true, Laya.Handler.create(this, this.addScene));\r\n    };\r\n    SceneLayerManager.prototype.addScene = function (scene) {\r\n        this._sceneSprite = scene;\r\n        if (this._sceneSprite.rear) {\r\n            this._rearLayer.addChild(scene.rear);\r\n            this._rearSpeed = this._sceneSprite.rear.speed;\r\n        }\r\n        if (this._sceneSprite.middle) {\r\n            this._middleSpeed = this._sceneSprite.middle.speed;\r\n            this._middleLayer.addChild(scene.middle);\r\n        }\r\n        if (this._sceneSprite.front) {\r\n            this._frontLayer.addChild(scene.front);\r\n            this._frontSpeed = this._sceneSprite.front.speed;\r\n        }\r\n        Laya.timer.loop(30, this, this.update);\r\n    };\r\n    SceneLayerManager.prototype.update = function () {\r\n        if (this._sceneSprite) {\r\n            var layerSpriteName;\r\n            var layerSprite;\r\n            if (this._middleSpeed) {\r\n                for (layerSpriteName in this._sceneSprite.middleList) {\r\n                    layerSprite = this._sceneSprite.middleList[layerSpriteName];\r\n                    layerSprite.x -= this._sceneSprite.middle.speed;\r\n                    if (layerSprite.x < -Math.abs(layerSprite.displayWidth)) {\r\n                        layerSprite.x = this._sceneSprite.middleEnd.x + Math.abs(this._sceneSprite.middleEnd.displayWidth) - this._sceneSprite.middle.speed;\r\n                        this._sceneSprite.middleEnd = layerSprite;\r\n                    }\r\n                }\r\n            }\r\n            if (this._frontSpeed) {\r\n                for (layerSpriteName in this._sceneSprite.frontList) {\r\n                    layerSprite = this._sceneSprite.frontList[layerSpriteName];\r\n                    layerSprite.x -= this._sceneSprite.front.speed;\r\n                    if (layerSprite.x < -Math.abs(layerSprite.displayWidth)) {\r\n                        layerSprite.x = this._sceneSprite.frontEnd.x + Math.abs(this._sceneSprite.frontEnd.displayWidth) - this._sceneSprite.front.speed;\r\n                        this._sceneSprite.frontEnd = layerSprite;\r\n                    }\r\n                }\r\n            }\r\n            if (this._rearSpeed) {\r\n                for (layerSpriteName in this._sceneSprite.rearList) {\r\n                    layerSprite = this._sceneSprite.rearList[layerSpriteName];\r\n                    layerSprite.x -= this._sceneSprite.rear.speed;\r\n                    if (layerSprite.x < -Math.abs(layerSprite.displayWidth)) {\r\n                        layerSprite.x = this._sceneSprite.rearEnd.x + Math.abs(this._sceneSprite.rearEnd.displayWidth) - this._sceneSprite.rear.speed;\r\n                        this._sceneSprite.rearEnd = layerSprite;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SceneLayerManager.prototype.clear = function () {\r\n        this._frontLayer.removeChildren();\r\n        this._middleLayer.removeChildren();\r\n        this._rearLayer.removeChildren();\r\n    };\r\n    SceneLayerManager.prototype.destroy = function () {\r\n        this._frontLayer.destroy(true);\r\n        this._frontLayer = null;\r\n        this._middleLayer.destroy(true);\r\n        this._middleLayer = null;\r\n        this._rearLayer.destroy(true);\r\n        this._rearLayer = null;\r\n    };\r\n    return SceneLayerManager;\r\n}(BaseManager));\r\nexport default SceneLayerManager;\r\n",
  "references": [
    "D:/project/canting/canting/src/game/manager/BaseManager.ts",
    "D:/project/canting/canting/src/game/controller/CommandChannel.ts",
    "D:/project/canting/canting/src/game/SceneSprite.ts"
  ]
}
